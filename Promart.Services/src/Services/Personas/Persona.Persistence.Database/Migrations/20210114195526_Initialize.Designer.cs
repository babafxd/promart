// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persona.Persistence.Database;

namespace Persona.Persistence.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210114195526_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Persona.Domain.Persona", b =>
                {
                    b.Property<int>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<long>("Documento")
                        .HasColumnType("bigint")
                        .HasMaxLength(11);

                    b.Property<string>("FechaNacimiento")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.HasKey("PersonaID");

                    b.ToTable("Personas");

                    b.HasData(
                        new
                        {
                            PersonaID = 1,
                            Apellidos = "Saavedra Castro 1",
                            Documento = 15957844L,
                            FechaNacimiento = "13/06/1981",
                            Nombres = "Marco Antonio 1",
                            TipoDocumento = "DNI"
                        },
                        new
                        {
                            PersonaID = 2,
                            Apellidos = "Saavedra Castro 2",
                            Documento = 25957844L,
                            FechaNacimiento = "13/06/1982",
                            Nombres = "Marco Antonio 2",
                            TipoDocumento = "DNI"
                        },
                        new
                        {
                            PersonaID = 3,
                            Apellidos = "Saavedra Castro 3",
                            Documento = 35957844L,
                            FechaNacimiento = "13/06/1983",
                            Nombres = "Marco Antonio 3",
                            TipoDocumento = "DNI"
                        },
                        new
                        {
                            PersonaID = 4,
                            Apellidos = "Saavedra Castro 4",
                            Documento = 45957844L,
                            FechaNacimiento = "13/06/1984",
                            Nombres = "Marco Antonio 4",
                            TipoDocumento = "DNI"
                        });
                });

            modelBuilder.Entity("Persona.Domain.PersonaDetalle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(300) CHARACTER SET utf8mb4")
                        .HasMaxLength(300);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(13) CHARACTER SET utf8mb4")
                        .HasMaxLength(13);

                    b.HasKey("ID");

                    b.HasIndex("PersonaID");

                    b.ToTable("PersonasDetalles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Direccion = "Santa Anita numero 1",
                            Email = "msaavedra.1@gmail.com",
                            PersonaID = 1,
                            Telefono = "+51998989333"
                        },
                        new
                        {
                            ID = 2,
                            Direccion = "Santa Anita numero 2",
                            Email = "msaavedra.2@gmail.com",
                            PersonaID = 2,
                            Telefono = "+52998989333"
                        },
                        new
                        {
                            ID = 3,
                            Direccion = "Santa Anita numero 3",
                            Email = "msaavedra.3@gmail.com",
                            PersonaID = 3,
                            Telefono = "+53998989333"
                        },
                        new
                        {
                            ID = 4,
                            Direccion = "Santa Anita numero 4",
                            Email = "msaavedra.4@gmail.com",
                            PersonaID = 4,
                            Telefono = "+54998989333"
                        });
                });

            modelBuilder.Entity("Persona.Domain.PersonaDetalle", b =>
                {
                    b.HasOne("Persona.Domain.Persona", null)
                        .WithMany("Detalle")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
